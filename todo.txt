1. Countdown latch for ACKs - done
2. send port num to client - done
3. send file info to datastore - done
4. datastore to talk to client - done
----

1. add index - done
2. add way to track files and its state - vector - done
3. add files to tracker and update states - done

--

1. add reload function, countdown and remove files inavailable ports
2. add remove operation -done
3. add new countdown latch for remove operation -done
4. store list of datastores for controller in index -done


--
1. put datastore listener and client listener into one thread - done
2. add timeouts -done
--
1. Find way to synchronise clients - No overlapping messages
2. Evenly distribute files - done
2.1. Prioritise low files - done
3. list of latch objects for each file... make latch list.
when new latch object needed create and add to list, along with filename.
when counting down - ack finds correct latch in list and decrements
finally after timeout, finds associated latch and checks its countdown.
3. not enough datastores to remove operation - done
java Controller cport R timeout rebalance_period

java Dstore port cport timeout file_folder

java Client cport timeout

java -cp client.jar:. ClientMain 12345 1000
